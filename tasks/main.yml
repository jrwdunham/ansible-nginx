---

- name: "Add epel-release repository"
  yum:
    name: "epel-release"
    state: "latest"
  when: ansible_distribution == 'CentOS'

- name: Install the nginx packages
  yum: name={{ item }} state=present
  with_items: "{{ redhat_pkg }}"
  when: ansible_distribution == 'CentOS'
  tags: [packages,nginx]

- name: Install the nginx packages
  apt: name={{ item }} state=present update_cache=yes
  with_items: "{{ ubuntu_pkg }}"
  when: ansible_os_family == "Debian"
  tags: [packages,nginx]

- name: Create the directories for site specific configurations
  file: path=/etc/nginx/{{ item }} state=directory owner=root group={{nginx_group}} mode=0755
  with_items:
    - "sites-available"
    - "sites-enabled"
    - "auth_basic"
  tags: [configuration,nginx]

- name: Ensure log directory exist
  file: path={{ nginx_log_dir }} state=directory owner={{nginx_user}} group={{nginx_group}} mode=0755
  tags: [configuration,nginx]

- name: Copy the nginx configuration file
  template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf
  notify:
   - Restart nginx
  tags: [configuration,nginx]

- name: Ensure auth_basic files created
  template: src=auth_basic.j2 dest=/etc/nginx/auth_basic/{{ item }} owner=root group={{nginx_group}} mode=0750
  with_items: "{{ nginx_auth_basic_files.keys() }}"
  tags: [configuration,nginx]

- name: Create the OLD instance site configurations
  template:
    src: "old-site.conf.j2"
    dest: "/etc/nginx/sites-available/olds.conf"
  notify:
   - Reload nginx
  tags: [configuration,nginx]

- name: "Create the Dative site configuration"
  template:
    src: "dative-site.conf.j2"
    dest: "/etc/nginx/sites-available/dative.conf"
  notify:
   - Reload nginx
  tags: [configuration,nginx]

- name: Create links for sites-enabled
  file:
    state: "link"
    src: "/etc/nginx/sites-available/olds.conf"
    dest: "/etc/nginx/sites-enabled/olds.conf"
  notify:
   - Reload nginx
  tags: [configuration,nginx]

- name: Disable the default site
  file: path=/etc/nginx/sites-enabled/default state=absent
  when: old_instances != []
  notify:
   - Reload nginx
  tags: [configuration,nginx]

- name: Create the configurations for independant config file
  template: src=config.conf.j2 dest=/etc/nginx/conf.d/{{ item }}.conf
  with_items: "{{ nginx_configs.keys() }}"
  notify:
   - Reload nginx
  tags: [configuration,nginx]

- name: Check nginx syntax of configuration files
  shell: nginx -t
  register: result
  changed_when: "result.rc != 0"
  always_run: yes
  tags: [configuration,nginx]

- name: Stop the apache2 service
  service: name=apache2 state=stopped enabled=no
  tags: [service,nginx]

- name: Start the nginx service
  service: name=nginx state=started enabled=yes
  tags: [service,nginx]
